<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="help.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlheACdAPcAAAAAAAgxlP//9xBSzq3F/wA6rQBSzmuc7wBSvQhCvRBS1iF77zFr3lqc94S191KM
        7xBz5pTF9yFjzkpCWkoQWkpCKUoQKTp73nOt7xBj3hBj5nuljHulOqWlY6WlEHulY3ulEKUQ3qUQWqXe
        taUQnKUQGc6ljM6lOnsQ3nsQWnvetXsQnHsQGc6lY86lEM4Q3s4QWs4QnM4QGUpz5kJzpQi1taXF9yFr
        zghClDqE76XmjKXmOhnvOhmcOnvmjHvmOhnFOhlzOqXmY6XmEBnvEBmcEHvmY3vmEBnFEBlzEM7mjM7m
        OhnvYxmcY87mY87mEBnFYxlzY0rvtUrOtQi15gjmtSFj3hBjziFCpaVz3qVzWqUx3qUxWqXe1qUxnKUx
        GaVznKVzGe+ljO+lOnsx3nsxWnve1nsxnHsxGe+lY++lEHtz3ntzWntznHtzGc4x3s4xWs4xnM4xGc5z
        3s5zWs5znM5zGe8Q3u8QWu8QnO8QGaVS3qVSWqVSnKVSGXtS3ntSWntSnHtSGc5S3s5SWs5SnM5SGQgh
        nErvOkqcOu/F5t7m90rFOkpzOkrvEEqcEErFEEpzEFJCzkrvY0qcY87FtUqtrc6c5krFY0pzY86ctTEQ
        zim1tTFzxUrv5nOczkrO5gjm5ghCWggQWhBrrQhCKQgQKcXF5u/mjO/mOpS196WlzhnvhBmchO/mY+/m
        EBnFhBlzhAgZznulraWlrQBKre9z3u9zWu8x3u8xWu8xnO8xGe9znO9zGe9S3u9SWu9SnO9SGVKM3im1
        5oTm9ynmtQgQ787v3s7vtSFChFJC70rvhFJCpUqchO/FtVIQpUqtzu+c5krFhEpzhO+ctSkQpSlC7zEQ
        71IQzlJChFIQhCkQhFJ7xQhC1ilCxUpCCCnm5ilCWikQWhCMrSlCKSkQKRlCCEoQCBkQCEKl76W1jKW1
        Ou/v3u/vtSFz5qWc76WUjKWUOlIQ7wgQhBAxlISc763m9whS7xBSvQAxCK3F7wgxhP/m9wAACAAxlAAA
        ACH5BAEAAAAALAAAAAB4AJ0AAAj/AAEIHEiwoMGDCBMqXMiwocOHECNKHEjPH72LGCtenMixo0eOGUNa
        DEmy4seTKEGOLElyJUuMKWPKJMhypMsCF3FidFlzpk+QL3XqfCly58ufSBcSJYmPm7ADGDA4mBoVw4EH
        3PBhGUoPB9GkYAVmHCn0YidhDiLYI0BgLdsIBCKokutgripVDjA86DS0r9GwPpdiQcvWLdu4ceFGWDx3
        cdqpkPM+wLeUHmCUY+npxFGAmwO39uC2VQs3dOLEd+tGXp03BxavLC931FwSBxYMheOCRvxWMWO5v1VD
        rucA6oG8DTphwQgbpmyIIYd2ctC2eltVptXq9p0YOGuqeR3U/7N6oHyDC7RJPndY2xt167oPW1d8erH3
        ucIhYxhftTj55Mtd5NJ6CbF021prlSZaaNkhSN9iBNhFF16QHSfVceUZZ95VEsRGYEGZXXSBYYWVNpp8
        2b0VV2P40cUafxj+t+EBrqXn3IcAYDQUPtiVaFqCuTFYYneK2UUhheLldWFx5ZF3QAMbJufheiVxUx1p
        uVWXoGmIPbiidy5ONV5e49VjnIwNPHDVA2zWyBOVIeGAG4lAqqVKlloqaF9wSIop3oVRZSgolFc9yWYD
        OVCm3mU7LYfFZ11uaZ2QpNU5F2qQRTAVXsRVSGaMUaa55ppsMgCbTv4AJhI+k14JJInaIf9mT3EPXGDF
        ALjmOgADZ0lF5n5WOSlooYWyyaYwpZYE1kXNdeIWliYWhp12hmFwwQAGDICArtzmum0nUPG3n4aCPnWo
        scbmMEMOzGaEFEmdvLXbq9H61kC3uErglDBPcXOBBNziI4GG5H2SoTCfqMmvscg+gGwOOaCX040xZYRT
        J9FySW1uJmLArQSfqLKIACSXbLIAp3wC8AD4dAOuVQYPq/ABTzXc5gzCqMtuSDNNbJa0hml84pUXdMPy
        FZ+MfPLSS58iTLa4PiUsN+UtzG/DwszwAMTrzuDOoijxxONu8eU52loOYIvPAA7ww/TbTC/CDcvdXFBu
        1TUje3UOW2v/DfEFOVgB9kchYeHqtJJGy1baUbMD9+NM18PyAODSbLneDiOLs9Y567zuv5mdRNJ78GWJ
        oLwRXMHyAZC3vvQiAHcjwVN4H7CG3jjzC7i6Oc8A+AwJdEXxRJnNqZiDst658bUDCOP68yYvMvm+eTdw
        ddbCXLC5zrsDruNGs6XnbHyvnng6XJIPYMXzi7TvvuuwZ2u3w5njrnv2We/OQA77C84z8RkxXHwWJJor
        BekC2TpF6wjAgAF044HZYkA9WqeKXPGLZg7bXPa0d4EOAm5/IORfh9wlEZFQJ2ixYpCJsoOrC7TuFLnK
        1rZwZQArKA1uGGhZJ+p3vfv5roPqCmH//wI0vIYI6CLCMF8BuTSk6nhsAPponQMMsLbrrWwAErjh2zrR
        QvvhrINfBGMnIMaAMgYucCuxCHQmhgMCaol8sYrVAxDQDS2+jR35+tV4AGYABdjxZDCUHfYyd4H8efAC
        nSijEAN3geCRkD0ZqUf5jqciSY1GGLj6I9OY9yclYaATRnPh4zA5gEJiT3sbnIG/fphI/jHAHWb03yMX
        4hJ8kO2NWuqRAZn3PMklICpKMhMGJNAyVTxuEWub3Rc3eEhEKpIBVuAf/9xhhWsJD3wMCYnyfiQaBaGI
        klZY2/NOkS1hAKsq5Yka5GaAq9yhUnv+YsAF5JnIRL7ymdT0mWWUkv+ReIFGQcg724LYci0DPM8eUTun
        mcqzMk2WDIaUw98PPdgJ3z0TmmVcwD2tMMIiGiQk7+GSYVY40B8xz6GAbCGMMPAJq5wUcrmq1Rd/6Lt6
        8ooBEoBm4O6Zz1kihDneEFKWNrZE3sjFY92I4gsTOi4nCaNlSoUbKQvpQX85c57PzKkErMBTjioKNgoJ
        yQEOo8L55ImbCaogPkQJuQNkCyrBKo/BmGfMx6libZ0AIxjleVNecRSnVuAqLKnJ0bGEVUBYaMBiREq+
        splVMcwjAOSkJzDysLRc2orq26S3K99Z9apl7ARXRSuB0lqBmtbYqgKIiM2CcOUCDYDU0Owxrev/iPRB
        EXhiFuG2iFuVcjxNElTRBqDAY2ZLAodkwAzoqUitWoG0W32laQcwoINk5BDpaEADyhYrPJ1IOxCKwAVa
        NoAD2JEAB8iVBKpippiVpxMts0fr8qXXvNoTmqIlLUf3646tYlGWraUJRvCh3dgGCaA9EmljUCPeyRkt
        sFboxtpwBa7xtHRY2cOV42Dawgtw45nOFC00S1taLMpuvwB7jU4QshLYFhi8TXyWAX3DGFWkN2C6Mmeg
        MMxQXLmOvvMMsj2ja9qt+hdgHP3vAP4nYIwUWLuU5NjZ6sNg/ExFGNBFLjcaEChhDotmpHTeZI+rvbw2
        169GNrLssPjfEnc0/8A5OtWTG5AO8EoKVgnaE3Dskh9xAcs47qXdUwcwwcniSgEfxqpNOXoBb3CUxGzO
        wH8VIIHVVmQ5H8VIJ+acg+26SlbQ8s1dwrQaqfw5WJ8g1MFIOQDXEYBl1bwqV5+L4iOz+QpXAFhpKe3I
        kYAIIy4u8AIWEOWh4TZCjEkLXihEnDJFxctybYDBaqZOClIYqzdNJK3TTGkFDEABqpt0iZmco4zMuQHD
        XsCz/jkaPe9ZU6wxtbjcezAwJyCTriNlaJv71zSrT9cDyHXAsYjkJc8yJJxOt2LZ3SXESEg4SCLOOZsK
        FXrTTHX4YJ3r5kY5voo4kWlOMsDAjSvVFVwCV/9o1z7F4g+cJPbJ6Uj3AqiDpRTtyUiairi8AyWsqoF5
        ZWydbDcMgNyb0vrR0wX4wFVncoBjYSVNpgeBn5wDmc98pF16t5X1swqq8Ae4MMNw7LiB0pNVEIuKHDJg
        /V3pWw+czbeSgCNNQhFNz9nqC8iBN0MT3vvkx5PzDnu9Wd2Jsp9sZfblashL6w1vr4zpuMJHuAE+d5zU
        XUR3H3bVh52OCIXmUvZpUZ+SZGqKY1gYEsgWPhhgeJPpI1/PpDV01YdFb0Ne8pNjs66bs/KMdPrJeNc8
        bbskodRsivS/QqcwePWvlU1YzOxrIBb/hdMRozju+Sp5wNd2BYGxeQBzx2b/Rh6Q+eDrnUii//uf5n0A
        gzmwW50oLvQ+cbR955ftKH87KSa3tglXWtdMZm4wF3zplg4ssmcvYmpKYjDkgUkTNgDckDTQUzIEYDS7
        ImL7hXRJliuQt30DsH8PuDIWIxAFYBNz9gDptnl5l4IHuGzq93XhcjC48gkTuDSvB3s3hVzeUGRrBjDd
        F3n8B4TfZ3DOgXADSIApWBfeERnE0VIO0FI8ZxzCYDR1VYMkQwCqh1w5dX1Id0Xhtn8fqC3agg/J9H3/
        MxYJh4Qyp1hH8h0KJVdVwzJVWIM3iHZaWH0kxlFr9oVC2H/4QEVDSITgY4TAp4YylwPHNxWf4ElVcWHC
        /7U2msU+B9AN25JTfpVftTaED7g224IPnUiG6oUrKnd5/pBwKpiCBOgrwyEeZZIhlxWHSVWDi8A86pNX
        W2h9bqYr+/eD/feJnuh/uRKAGPF7wmaIeJcD+xEeVREVjngw4wVF0LMIkzg5yDVaz1Vk/lVym6gt3deL
        npgAD4hFinIj41d+xmh15uRsl9Vz5VFQkfg2BEBKE2ZP2oaBkOaBktd/LNOJCECG4AiKQ3hEvacRwmCO
        5keAELAAOsZSThIzNcMNCbRZi6AKDyABFghkfoWH9zg5vGgAIOiNvwiO93ZFjsQZvacTm1aI54iQyMIk
        PfcUkQVIZYQtFuh/HdRXeP+4gZGHcUH4h7+4NiL5i30ojBchAWm4kunmDkrpDhqQd2pyNzTTSAMgXybD
        OEKIXGaWVbOnjTxJCqrni9/4iwiQAOA4hKwVdS9XYKd4jtaQbhrgDgvAlO6QAabkcxlGXGZHjVbwWUKW
        g1YQbrgChvrIMn4YkoYJjrUQjgNQC7PUHGmpXVW3llbXlsPWlAvwlnH5lkrZlBmQAe5gSndpR/WwNh20
        Qcw1YpLGgW8XhmLok/1IReDYjyKJAFgwlsmUTPtwcEd0gkhZmXF5mUuZAQtgBRBwWnPZmbcSX3lZNzcJ
        chwFebi2fbxIQx8JimR4mLRpm2WZK93gM792EcSoXcH/R5mUaZnDtpSbmZ7EmQHGSZzhZkc5xH0DIGnQ
        +X1geDT6yImuiQ8JoJ3fOJYIUAu1cG8mRobkVm4VsWVUZ3WSOWwQ0JZvGaFwqQGn5ZkWipwK0DKiWXKS
        hnL0uXSreZ9eeZ2ESYb9yJ8hmZ1YQJa1ADDJFH4fpROPiSgyR5luuQBt6Q4JuZSayZ7FWZxzeVpX4A7v
        eTI5lC9XAG4+OHC4h3uTM0P76Z+yiZj92Z+1UJsXKYgrd3kXcZQ1anWaKZc9Opw/agUZIAEQcAVmSkN2
        RH8BF52Td3s8mZ/XSYYSdpiJmQB5KqBkmQDEFIw+JRYCEp7oBqa+2ZRiyqNBaqFm/7qof1mkJjONIAqY
        Tro2+8eP+4mdInmlAbqiAloL6iVho5hpZpGGNoqoE4qeYhpYxUmcaCoBZ5oBaporbTphJsd03deVQNiP
        hPmPs4mitZCdesqiCbCiVzQAZ2ldAqiWN3qeYSqhFEqc0goB7FmtEACrjxo1MzWF2hduPzg5YAiI13mi
        sBmWA4oPAzqWA8qn6SqEGqEZP7UTM/BkW2OewBmXcnmZVrAAFrqor3qmaiqrkjZh5NUtfBiYueKNYziG
        sYmiVOqpxTqgWPCpAXOgBLEj2pUO5Ld596Comhmtxcmo11qtJJtrZ4pjg9mBrPmkfniivsqf2XmuVjqs
        7FoAfv8qYRbJe1v6nRdBfj6Lgooql3NJptJqoWiaATfwlwBrplcgq9GJL7l6NAlLmPvYfw3bn8LKn3rK
        pxO7rgVwrmsmiu3CT5inllWHnh/bqD5qptgaq7LKtCZLqUKYe6zZf1T0iWPosmE5s1dKrF5bCwWwokIY
        ICumELy3sdr1AInKlNIapMU5pGcasm+La0p7rAF3FtwAmLrSf91ImHpbpcCqp/wZrBEroF9brF/bLVyR
        TTqSkoiCKB+rlGsbsq7amR4Kq00Lq6uJD8IgfySzCIMGrlTkkz/ZnyZKpeharDS7rnr6tc5LoALTDay1
        s/GaE2mSuIortGvLnkMasAEbq2r/2rRPG3BzeDKws7meC5SfO7qjO7MT27yAuxWAC6rcwnsFYEQZsS6v
        C7uLSk2Myr1MW7nRuaQs47txo3rD+4kua5vnyrzoyrym66kFMMF+mnvhR70FIoAPoLEoyKpm+rhzeQOd
        Cb5Kqz7imysY4Dp1qMBBiZgwC7Hv+6lX6ryA+7VY0C0hsQ8PERIS8LOIUrT9ZbtCjLtEPMDqBT3P6I8m
        urfoWps0u7U2S8E1PL8FMLUS8HSBSrYXMa+d1sWMegUhG76T+6EfinGF5joQJZYiSaWku7zKa8NT/LUt
        R6CR153tkiprpBEEhri1Uq1/+ce567QodytwSqvRCDUtnJgN/7y1yivDcVzDgQu9uWK/AHQRh7BpXYwo
        Otq0Sgu+s0qfJvd2BtB6JhN5KYqu7eup68qngeu8E/x0qasrcmexD8F7XIwoDgPIACurlYZr9cmTA0DK
        JZMrZJm8K/rEq/zIrxzHinnBGAxJiNXFGxs4YwwwTqt79UlHwkwyuNKPwerEAUqbq4y6qBvHJVgL/qBe
        LSMBOks4GbHHfNNpFyC+Tnuy9emBuVK+j2MPRuOwATqsqizBVDzBgOsPNdwtWhFAmAEbl/y68ZwDsApw
        tzpwCiCiLBN0bWW1zBvDw0rDrnylLUfQBEpMspMALoHH7txPbWI96oJr4NaBKnufuGLAm/+VK4s8oFv7
        qR5N0Dw9xy4aec5cMSEBOFsDMRDzl5PKpJq7NjXUesyjp7S5vBLL01vR0yX4td7HLRbzzOHje+iSAzmz
        pExnqUBonS2EUovwABLGMhAs0DZLxYBLDwM9oBZZoOPoUaITEp3zMEdNwHI7oj6ZL/osAASQxADNruXs
        ynLsvC3nD1jQg+AHMIMzE1gMbEadMzlzLfnYk/wHkPlyAKqgDzYGSkANwaZ72ss8wa1s0AWgmLhywV6x
        LCHBDQ8dMRHjgxMGggkslhNGiVkKfmMZw1Mdvzy92OgcuGF7Rd6gs1xdMc3hDwyQNfGc2eEUhsNLhsPr
        q5xtrqscxQP/utOsfdUFMEOamAC5Oaqqkh77gA9/oy7d46J264/9aJv0DbNk2bWMLL873cpXfaW6l33I
        ar/NHRiFszsQk9kRU7VLnMjtO85/+7WQPMEGzdoGjQV9JHBXdNd4HRYlkVe27Tu2/S8Oq8TByr4AndOJ
        3cq1wBnza9D35nhKR0zKgiMImhHegOCAk+P8E04wq7UQy6nj7NEDPcGaUQuyQ2LHapFbDWcEYiMDpuMg
        1EzElJgAyrwAbcPOW9XH3bdIDnDYN70b3uQkgQXypOOAE02xhlP+WJuO3Lwf7bzex7YnR2lYlABckcU0
        HmcigQXecJOf6UHy9Ocd9Gh1rrUiKXdb/yVatfZ/SucNdy48ea7FzIEF1SRNlV5NmP6ZXNVXmI6Li64A
        +3Vi4OcV503Lkc6zTBFr1cRXttLqsxZY+uVcRlZrR86fQXHqO8zcF4EFOeXqvo7ptoLpWzjrScdRzpwR
        OIDrJfTo+3AIXeGnv67oWpiBxP5o0ksUlqfsQEEUh2Ab4ChiwU5raycB3rAVh1DqR6HtKV0ZGHHeWwEb
        zb4PPFES2a7uKcHu+L4U9i7b+c7uKL3vjBIi16Rykw3weU7vA27wCr/wDN/wDv/wEB/xEj/xFF/xFn/x
        GJ/xGr/xHN/xHv/xIB/yIj/yJF/yJn/yKJ/yKr/yLN/yLv/yMB/zMhc/8zRf8zZ/8zif8zq/8zzf8z7/
        8zAfEAA7
</value>
  </data>
</root>