<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ok.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhtAC5APcAAAAAAIAAAACAAICAAAAAgIAAgACAgICAgMDAwP8AAAD/AP//AAAA//8A/wD/////
        /wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAMwAAZgAAmQAAzAAA/wAzAAAzMwAzZgAzmQAzzAAz/wBmAABmMwBmZgBm
        mQBmzABm/wCZAACZMwCZZgCZmQCZzACZ/wDMAADMMwDMZgDMmQDMzADM/wD/AAD/MwD/ZgD/mQD/zAD/
        /zMAADMAMzMAZjMAmTMAzDMA/zMzADMzMzMzZjMzmTMzzDMz/zNmADNmMzNmZjNmmTNmzDNm/zOZADOZ
        MzOZZjOZmTOZzDOZ/zPMADPMMzPMZjPMmTPMzDPM/zP/ADP/MzP/ZjP/mTP/zDP//2YAAGYAM2YAZmYA
        mWYAzGYA/2YzAGYzM2YzZmYzmWYzzGYz/2ZmAGZmM2ZmZmZmmWZmzGZm/2aZAGaZM2aZZmaZmWaZzGaZ
        /2bMAGbMM2bMZmbMmWbMzGbM/2b/AGb/M2b/Zmb/mWb/zGb//5kAAJkAM5kAZpkAmZkAzJkA/5kzAJkz
        M5kzZpkzmZkzzJkz/5lmAJlmM5lmZplmmZlmzJlm/5mZAJmZM5mZZpmZmZmZzJmZ/5nMAJnMM5nMZpnM
        mZnMzJnM/5n/AJn/M5n/Zpn/mZn/zJn//8wAAMwAM8wAZswAmcwAzMwA/8wzAMwzM8wzZswzmcwzzMwz
        /8xmAMxmM8xmZsxmmcxmzMxm/8yZAMyZM8yZZsyZmcyZzMyZ/8zMAMzMM8zMZszMmczMzMzM/8z/AMz/
        M8z/Zsz/mcz/zMz///8AAP8AM/8AZv8Amf8AzP8A//8zAP8zM/8zZv8zmf8zzP8z//9mAP9mM/9mZv9m
        mf9mzP9m//+ZAP+ZM/+ZZv+Zmf+ZzP+Z///MAP/MM//MZv/Mmf/MzP/M////AP//M///Zv//mf//zP//
        /yH5BAEAAA8ALAAAAAC0ALkAAAj/AB8IHEiwoMGDCBMqXMiwocOHECNC5LGjosUdEjNq3Mixo8eNry6K
        vPixpMmTKFOOXGkxpcuXMGMKpMaypsybOHM+hFVzB5ufInUKHaqT58ifSIFeBEO0qVOUi1YmRTpS29Or
        WDNSPDp1JbWsYMMqZDmVzUqxaNM+CMm17MhFauNiJSS1rNmgcvM2JWt3JCy9gHMq4usWb+DDL7XRbVuY
        JOLHKGGBqdtX5FfImD0aZdzVcubPG6Ny7uwYtGmIXyhXvnj5tGuF2wivtmj1te2DsmdXvM2bYGzVujH2
        7s12dNKzw3kvFmn3uEgzyXnnblw6uuvppC3Cte6apvHsFbdz/zctmnlzqiIVjSePHfwO8esxTx655jz6
        6vEf//7uXCTT/JBp015/F/0F4GPFXWSGfUqJtM2Bj5V3EYMNXgQfhHl5xx+BFhmIoV7LXRQEhXcZ9mFe
        LI1I4Uq1nRjXfuatOJKLeSVoEYkVtkRjXBLeiCNyO6Y1IHU6BokWcAwCaWRW2thYkYokKrnkVbYMSeQO
        /02JVY8V4XifRVlq+dR8Mf44o5hPaVhmlP6h+ZSTO0BppoVuOkXmhF7muFudRFkZXJh84gRnnl9WVEig
        Qg224Xl+IaqTn8G94ihOm11UH6ElWtTapDAVguScmnIqE6SRihrTp6BWtKmpJ1XqI6aZ7v/JKkpq4glr
        o7OexGWcsOq5aq4d3WmRnISO9CuwG6XYa6zCIesRjBYtuOyZznbkapfLMlttR7W+2qux24KEap7UhitR
        iN5+65m5ErF0RLbastvuSMTeaqK8DVW5aKrNQnYsZqQmee9hilX04Gfd+gSvni0+JmVgAQvM2mc9HRax
        feUC3JOsaQm4r5cZa7xxkWBdq/DC8Z42csh9jospyxSvDPNNK9U77cAqMydzvzIlbLO6+L1GLxvvMsvS
        qCsVjfJIB/fGmRkyu2SytCgz+6/QF/HQXNQl7Vp1oTwPtyHUK3MEbboLzyydrfaRPbJEPn+tZ9PjrWmf
        EFwzZPLPN0//DKDdDLq98Vg1y53y34BTiHfZBbnct0V0I462l0Es/vaghh+OYeKUB7Ez21/jeuLHFHou
        M9/Zqi355L2aXhPqj1ckqZGcT7sV6KGrDmHtqT+ZuZ5h70j677FzPOXwxBeru4u8J28vzsc37zy50GuJ
        /PSMVi/m9di7Z6r03QfHKvfdL4+mSFqHzy+y5BP/sKjt/24+n/HLPX+g9S+t/fjgy78//7gL3/04lb/n
        kUxeBVTeARHYP/0tEF8JZNMD8fWACGKsQBREiAV1c6EMDmSD1LmaB9HnPosQwoMLAWGsUJjC59gvaCw0
        iAX/F8MKNvCCxqthQgqIQR0yxHES28HsvHz4wxsS6AtEfAgJXwbDJGqQe35zYkNGQjUJ7sBDUpxi/3qY
        RSWKyIo86GJEhoZDg4lxjFkL4hkzwp+LRG6NWlTQbDoIxziibSlvrKMdeaUnPWqkViN6ix81Qq/0DDJZ
        FTukRjz2PkV6kWmO3AgjmxhJh/Sokh3x2CIahslOevKToAylKEdJylKa8pSoTKUqV8nKVrrylbCMpSxn
        Scta2vKWuMylLnfJy1768pfADKYwh0nMYhrzmMhkZUAAADs=
</value>
  </data>
</root>