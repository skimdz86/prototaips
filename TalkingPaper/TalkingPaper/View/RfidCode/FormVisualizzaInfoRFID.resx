<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="OK.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>