<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="Termina.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAHgAAAA+CAYAAADgZd+jAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAAK+wAA
        CvsBy58dkAAAAvBJREFUeF7tnL9KA0EQxpNnEHwOn8oqD+ALiFhZCxZaaWUhihZ2CjYWYqmCCoJg6Quc
        u1zOP+TOm5kku5PNT1gQcneTnW++2dlvJzesqmpg+hsO18J9ozBWwvgwPYObJB6I/l0NY3tQVWeSG/5c
        EwE2jcFgI4RGDA9GGh/sWXCygRuD4gfg8/D/umLcG4LiUfH85ruUYud47K+dXABvxSSvGKcGgK8Uz2++
        Syl2mky5lRdgSaqvA8HueImNOruUYaeeBwBPRDYAfy+9s1iD6xQtYVcpjm/mOu/5wOCOHcC8HQ/AhTse
        gAG4Z6dQ7wr6ljVSdOGB5Apg+V7Yvk2S25hum+TLTvZtklbJOgnp6VY5LgxKllc7D2Eu14r5NEpWNqFD
        q0UvsyplzSzRxwsGcF+BkapSTWnHvn0D4JaqVVapAnBnpWo9LvTn+FT6NQxuCSa7U/wFkn0upGhSdHum
        7VdTuoohe0eHP2aRoltTJ2tw3aojD1hSNGvwPxr2gu2DfcmB03eByOdjkWqzFlnvSyw7RslVK6Nehnue
        FD57G7M6G4NputO3zWrk2uyHDfLIshcZ8kImVUWcwo6b48Jl1JUBuPCKGIAB+J8tj2zJIUXTstPX1zUL
        qZIiy1pF99UuMBgGw2Adu2RrY6omATcMlst01p4kjTCQUnZMMZ/sQgddlfIu0dhR+aLsqjzILVXSVSnP
        YJaDhufFBLivgky1zqWyY5dpAbhDUPBYMMHgwn/MDcAAPPHWIlI0Kbr7VVizkCptVTRFltRvMBgGe2Sw
        fO+YQi1KpX4tVJF1ZHihWUxLsUlvVzleDbY82rHM4zOX0HFjcLp03eG6yUMS+bHsr/pmmiJrc6yrHip+
        ra55pyXX1u8A3Q/jLoxR39Fg2+d2gKVVMNdl9XFW45aI5B7d658BuPAMA8AArEsJpFBf/oLBMNhXRJIh
        dHjAYBisixgY5stfMBgG+4pIMoQODxgMg3URA8N8+QsGw2BfEUmG0OHxBfimaIdATyojAAAAAElFTkSu
        QmCC
</value>
  </data>
</root>