<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Indietro.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAHgAAAA9CAYAAABm8a0NAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAALCQAA
        CwkBEvpHPgAAA3NJREFUeF7tnE9kHUEcx1OhlBB6KqWnEELIqZRSciq9hhByCiGERyg5lVJKKaWUUnoK
        JaeQU8gppxBKKSWEEEIIoYRSXn9f702z9s2f3fdmdmcm3/AT3u7b2Z3PfH/z+/1m9t3pdrtj/Mu4BwCY
        lm8f+IErAoAfaMkm/7fLwTrAM2XAEwL2ndgOAZs9UKqAXwjUEzFEEPsEnA/ghwJzuw8WcGEHBJw+4HGB
        2BH7XYILwEcEnDbguT5Epdjy/x8EnCZgBFEfxP5qVFuE/IuA0wO8INDOHGAV5FMCTgfwo37aY3LHus/P
        CTh+wAiiXhqCKBfsKwKOG/ATAYRAyQXSdByRda+KVq5kNVFdK7ZZtT31Hdv5nqpybRY6UGL8OALYInAb
        4MfSxucANjUwqHrAlsRWLXbT5+bz532tD7QFeFE6AHPnsKotfw8u3qRgdLivdorXeWoAjKDP1l4ZsO78
        rVQBY9TvBejw3oKD3kUT8MijxT333BUAm2LXAeBCLQRsmLObcNFwZT8DgVWuEOkVFayBHBLwfen0r4HB
        ErAj2g4FeFnAXjQEF5BnqWB9Luwb8LR0NNZnQ0SttmsScOA5+J5AfS32pwW4AD+YsuCBb/LMEAPu1qVJ
        89Kh3wl4LPs8GHmn2k4TQjm6az7nHNzMHKzcIvLejthlQ4rGHi2mSQ2nSYCNAsTbgAUOpWaUPgm4BcBK
        0dgs9yWgmjEtEHCLgBXoGQGxGwD0CgE3Owe73nJ4JkAOPYJeI+C4ABdz1GMPoDcsgLGCZVufHfbYg4E2
        uR6sfX8JEff6iBE3Vqq4oyOCOdjmuhFxvxky4n6lBewoxI+8TJrA9X3Xol1zb5XjcH2IuF37oYsFD6Ri
        fp4lAWh1BqafTnEv+FcBWz4HETfeHKxSDXtPwHEGWVXAo6jvirg/EXC6gNUgwNsOpogbLt2PN6KL1oyU
        MC5ap27snkTOW95MsEXA6Su4CBwvpmH9Wb1O+o2A8wKsYCPixvzb+xmHzNyrj+fx0ynNuWhTUIYc2s+z
        ZDZI2CmZAS2rnoAJON8fCfMxx8V+DSqYCqaCY1ep7f6oYCqYCqaCM1cBARNwtFNdtDeWsmpiuncCztz7
        EDABM4qOyeXWvRcqmAqmguuqJqbzqWAqmAqOSZF174UKpoKp4Lqqiel8KpgKpoJjUmTde/kHRZQ1eL4g
        V6AAAAAASUVORK5CYII=
</value>
  </data>
</root>